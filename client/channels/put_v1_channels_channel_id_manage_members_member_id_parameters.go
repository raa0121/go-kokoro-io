// Code generated by go-swagger; DO NOT EDIT.

package channels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewPutV1ChannelsChannelIDManageMembersMemberIDParams creates a new PutV1ChannelsChannelIDManageMembersMemberIDParams object
// with the default values initialized.
func NewPutV1ChannelsChannelIDManageMembersMemberIDParams() *PutV1ChannelsChannelIDManageMembersMemberIDParams {
	var ()
	return &PutV1ChannelsChannelIDManageMembersMemberIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutV1ChannelsChannelIDManageMembersMemberIDParamsWithTimeout creates a new PutV1ChannelsChannelIDManageMembersMemberIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutV1ChannelsChannelIDManageMembersMemberIDParamsWithTimeout(timeout time.Duration) *PutV1ChannelsChannelIDManageMembersMemberIDParams {
	var ()
	return &PutV1ChannelsChannelIDManageMembersMemberIDParams{

		timeout: timeout,
	}
}

// NewPutV1ChannelsChannelIDManageMembersMemberIDParamsWithContext creates a new PutV1ChannelsChannelIDManageMembersMemberIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutV1ChannelsChannelIDManageMembersMemberIDParamsWithContext(ctx context.Context) *PutV1ChannelsChannelIDManageMembersMemberIDParams {
	var ()
	return &PutV1ChannelsChannelIDManageMembersMemberIDParams{

		Context: ctx,
	}
}

// NewPutV1ChannelsChannelIDManageMembersMemberIDParamsWithHTTPClient creates a new PutV1ChannelsChannelIDManageMembersMemberIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutV1ChannelsChannelIDManageMembersMemberIDParamsWithHTTPClient(client *http.Client) *PutV1ChannelsChannelIDManageMembersMemberIDParams {
	var ()
	return &PutV1ChannelsChannelIDManageMembersMemberIDParams{
		HTTPClient: client,
	}
}

/*PutV1ChannelsChannelIDManageMembersMemberIDParams contains all the parameters to send to the API endpoint
for the put v1 channels channel Id manage members member Id operation typically these are written to a http.Request
*/
type PutV1ChannelsChannelIDManageMembersMemberIDParams struct {

	/*Authority*/
	Authority string
	/*ChannelID*/
	ChannelID string
	/*MemberID*/
	MemberID int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put v1 channels channel Id manage members member Id params
func (o *PutV1ChannelsChannelIDManageMembersMemberIDParams) WithTimeout(timeout time.Duration) *PutV1ChannelsChannelIDManageMembersMemberIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put v1 channels channel Id manage members member Id params
func (o *PutV1ChannelsChannelIDManageMembersMemberIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put v1 channels channel Id manage members member Id params
func (o *PutV1ChannelsChannelIDManageMembersMemberIDParams) WithContext(ctx context.Context) *PutV1ChannelsChannelIDManageMembersMemberIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put v1 channels channel Id manage members member Id params
func (o *PutV1ChannelsChannelIDManageMembersMemberIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put v1 channels channel Id manage members member Id params
func (o *PutV1ChannelsChannelIDManageMembersMemberIDParams) WithHTTPClient(client *http.Client) *PutV1ChannelsChannelIDManageMembersMemberIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put v1 channels channel Id manage members member Id params
func (o *PutV1ChannelsChannelIDManageMembersMemberIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthority adds the authority to the put v1 channels channel Id manage members member Id params
func (o *PutV1ChannelsChannelIDManageMembersMemberIDParams) WithAuthority(authority string) *PutV1ChannelsChannelIDManageMembersMemberIDParams {
	o.SetAuthority(authority)
	return o
}

// SetAuthority adds the authority to the put v1 channels channel Id manage members member Id params
func (o *PutV1ChannelsChannelIDManageMembersMemberIDParams) SetAuthority(authority string) {
	o.Authority = authority
}

// WithChannelID adds the channelID to the put v1 channels channel Id manage members member Id params
func (o *PutV1ChannelsChannelIDManageMembersMemberIDParams) WithChannelID(channelID string) *PutV1ChannelsChannelIDManageMembersMemberIDParams {
	o.SetChannelID(channelID)
	return o
}

// SetChannelID adds the channelId to the put v1 channels channel Id manage members member Id params
func (o *PutV1ChannelsChannelIDManageMembersMemberIDParams) SetChannelID(channelID string) {
	o.ChannelID = channelID
}

// WithMemberID adds the memberID to the put v1 channels channel Id manage members member Id params
func (o *PutV1ChannelsChannelIDManageMembersMemberIDParams) WithMemberID(memberID int32) *PutV1ChannelsChannelIDManageMembersMemberIDParams {
	o.SetMemberID(memberID)
	return o
}

// SetMemberID adds the memberId to the put v1 channels channel Id manage members member Id params
func (o *PutV1ChannelsChannelIDManageMembersMemberIDParams) SetMemberID(memberID int32) {
	o.MemberID = memberID
}

// WriteToRequest writes these params to a swagger request
func (o *PutV1ChannelsChannelIDManageMembersMemberIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// form param authority
	frAuthority := o.Authority
	fAuthority := frAuthority
	if fAuthority != "" {
		if err := r.SetFormParam("authority", fAuthority); err != nil {
			return err
		}
	}

	// path param channel_id
	if err := r.SetPathParam("channel_id", o.ChannelID); err != nil {
		return err
	}

	// path param member_id
	if err := r.SetPathParam("member_id", swag.FormatInt32(o.MemberID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
