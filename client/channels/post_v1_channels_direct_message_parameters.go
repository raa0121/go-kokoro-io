// Code generated by go-swagger; DO NOT EDIT.

package channels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewPostV1ChannelsDirectMessageParams creates a new PostV1ChannelsDirectMessageParams object
// with the default values initialized.
func NewPostV1ChannelsDirectMessageParams() *PostV1ChannelsDirectMessageParams {
	var ()
	return &PostV1ChannelsDirectMessageParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostV1ChannelsDirectMessageParamsWithTimeout creates a new PostV1ChannelsDirectMessageParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostV1ChannelsDirectMessageParamsWithTimeout(timeout time.Duration) *PostV1ChannelsDirectMessageParams {
	var ()
	return &PostV1ChannelsDirectMessageParams{

		timeout: timeout,
	}
}

// NewPostV1ChannelsDirectMessageParamsWithContext creates a new PostV1ChannelsDirectMessageParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostV1ChannelsDirectMessageParamsWithContext(ctx context.Context) *PostV1ChannelsDirectMessageParams {
	var ()
	return &PostV1ChannelsDirectMessageParams{

		Context: ctx,
	}
}

// NewPostV1ChannelsDirectMessageParamsWithHTTPClient creates a new PostV1ChannelsDirectMessageParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostV1ChannelsDirectMessageParamsWithHTTPClient(client *http.Client) *PostV1ChannelsDirectMessageParams {
	var ()
	return &PostV1ChannelsDirectMessageParams{
		HTTPClient: client,
	}
}

/*PostV1ChannelsDirectMessageParams contains all the parameters to send to the API endpoint
for the post v1 channels direct message operation typically these are written to a http.Request
*/
type PostV1ChannelsDirectMessageParams struct {

	/*TargetUserProfileID*/
	TargetUserProfileID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post v1 channels direct message params
func (o *PostV1ChannelsDirectMessageParams) WithTimeout(timeout time.Duration) *PostV1ChannelsDirectMessageParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post v1 channels direct message params
func (o *PostV1ChannelsDirectMessageParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post v1 channels direct message params
func (o *PostV1ChannelsDirectMessageParams) WithContext(ctx context.Context) *PostV1ChannelsDirectMessageParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post v1 channels direct message params
func (o *PostV1ChannelsDirectMessageParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post v1 channels direct message params
func (o *PostV1ChannelsDirectMessageParams) WithHTTPClient(client *http.Client) *PostV1ChannelsDirectMessageParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post v1 channels direct message params
func (o *PostV1ChannelsDirectMessageParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithTargetUserProfileID adds the targetUserProfileID to the post v1 channels direct message params
func (o *PostV1ChannelsDirectMessageParams) WithTargetUserProfileID(targetUserProfileID string) *PostV1ChannelsDirectMessageParams {
	o.SetTargetUserProfileID(targetUserProfileID)
	return o
}

// SetTargetUserProfileID adds the targetUserProfileId to the post v1 channels direct message params
func (o *PostV1ChannelsDirectMessageParams) SetTargetUserProfileID(targetUserProfileID string) {
	o.TargetUserProfileID = targetUserProfileID
}

// WriteToRequest writes these params to a swagger request
func (o *PostV1ChannelsDirectMessageParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// form param target_user_profile_id
	frTargetUserProfileID := o.TargetUserProfileID
	fTargetUserProfileID := frTargetUserProfileID
	if fTargetUserProfileID != "" {
		if err := r.SetFormParam("target_user_profile_id", fTargetUserProfileID); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
