// Code generated by go-swagger; DO NOT EDIT.

package profiles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewPutV1ProfilesMeParams creates a new PutV1ProfilesMeParams object
// with the default values initialized.
func NewPutV1ProfilesMeParams() *PutV1ProfilesMeParams {
	var ()
	return &PutV1ProfilesMeParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutV1ProfilesMeParamsWithTimeout creates a new PutV1ProfilesMeParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutV1ProfilesMeParamsWithTimeout(timeout time.Duration) *PutV1ProfilesMeParams {
	var ()
	return &PutV1ProfilesMeParams{

		timeout: timeout,
	}
}

// NewPutV1ProfilesMeParamsWithContext creates a new PutV1ProfilesMeParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutV1ProfilesMeParamsWithContext(ctx context.Context) *PutV1ProfilesMeParams {
	var ()
	return &PutV1ProfilesMeParams{

		Context: ctx,
	}
}

// NewPutV1ProfilesMeParamsWithHTTPClient creates a new PutV1ProfilesMeParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutV1ProfilesMeParamsWithHTTPClient(client *http.Client) *PutV1ProfilesMeParams {
	var ()
	return &PutV1ProfilesMeParams{
		HTTPClient: client,
	}
}

/*PutV1ProfilesMeParams contains all the parameters to send to the API endpoint
for the put v1 profiles me operation typically these are written to a http.Request
*/
type PutV1ProfilesMeParams struct {

	/*Avatar*/
	Avatar runtime.NamedReadCloser
	/*DisplayName*/
	DisplayName *string
	/*ScreenName*/
	ScreenName *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put v1 profiles me params
func (o *PutV1ProfilesMeParams) WithTimeout(timeout time.Duration) *PutV1ProfilesMeParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put v1 profiles me params
func (o *PutV1ProfilesMeParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put v1 profiles me params
func (o *PutV1ProfilesMeParams) WithContext(ctx context.Context) *PutV1ProfilesMeParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put v1 profiles me params
func (o *PutV1ProfilesMeParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put v1 profiles me params
func (o *PutV1ProfilesMeParams) WithHTTPClient(client *http.Client) *PutV1ProfilesMeParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put v1 profiles me params
func (o *PutV1ProfilesMeParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAvatar adds the avatar to the put v1 profiles me params
func (o *PutV1ProfilesMeParams) WithAvatar(avatar runtime.NamedReadCloser) *PutV1ProfilesMeParams {
	o.SetAvatar(avatar)
	return o
}

// SetAvatar adds the avatar to the put v1 profiles me params
func (o *PutV1ProfilesMeParams) SetAvatar(avatar runtime.NamedReadCloser) {
	o.Avatar = avatar
}

// WithDisplayName adds the displayName to the put v1 profiles me params
func (o *PutV1ProfilesMeParams) WithDisplayName(displayName *string) *PutV1ProfilesMeParams {
	o.SetDisplayName(displayName)
	return o
}

// SetDisplayName adds the displayName to the put v1 profiles me params
func (o *PutV1ProfilesMeParams) SetDisplayName(displayName *string) {
	o.DisplayName = displayName
}

// WithScreenName adds the screenName to the put v1 profiles me params
func (o *PutV1ProfilesMeParams) WithScreenName(screenName *string) *PutV1ProfilesMeParams {
	o.SetScreenName(screenName)
	return o
}

// SetScreenName adds the screenName to the put v1 profiles me params
func (o *PutV1ProfilesMeParams) SetScreenName(screenName *string) {
	o.ScreenName = screenName
}

// WriteToRequest writes these params to a swagger request
func (o *PutV1ProfilesMeParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Avatar != nil {

		if o.Avatar != nil {

			// form file param avatar
			if err := r.SetFileParam("avatar", o.Avatar); err != nil {
				return err
			}

		}

	}

	if o.DisplayName != nil {

		// form param display_name
		var frDisplayName string
		if o.DisplayName != nil {
			frDisplayName = *o.DisplayName
		}
		fDisplayName := frDisplayName
		if fDisplayName != "" {
			if err := r.SetFormParam("display_name", fDisplayName); err != nil {
				return err
			}
		}

	}

	if o.ScreenName != nil {

		// form param screen_name
		var frScreenName string
		if o.ScreenName != nil {
			frScreenName = *o.ScreenName
		}
		fScreenName := frScreenName
		if fScreenName != "" {
			if err := r.SetFormParam("screen_name", fScreenName); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
