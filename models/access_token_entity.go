// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AccessTokenEntity Delete a access_token
// swagger:model AccessTokenEntity
type AccessTokenEntity struct {

	// アクセストークンID
	ID string `json:"id,omitempty"`

	// アクセストークン種別
	// Enum: [user device essential]
	Kind string `json:"kind,omitempty"`

	// アクセストークン名
	Name string `json:"name,omitempty"`

	// アクセストークン
	Token string `json:"token,omitempty"`
}

// Validate validates this access token entity
func (m *AccessTokenEntity) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateKind(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var accessTokenEntityTypeKindPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["user","device","essential"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		accessTokenEntityTypeKindPropEnum = append(accessTokenEntityTypeKindPropEnum, v)
	}
}

const (

	// AccessTokenEntityKindUser captures enum value "user"
	AccessTokenEntityKindUser string = "user"

	// AccessTokenEntityKindDevice captures enum value "device"
	AccessTokenEntityKindDevice string = "device"

	// AccessTokenEntityKindEssential captures enum value "essential"
	AccessTokenEntityKindEssential string = "essential"
)

// prop value enum
func (m *AccessTokenEntity) validateKindEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, accessTokenEntityTypeKindPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *AccessTokenEntity) validateKind(formats strfmt.Registry) error {

	if swag.IsZero(m.Kind) { // not required
		return nil
	}

	// value enum
	if err := m.validateKindEnum("kind", "body", m.Kind); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AccessTokenEntity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AccessTokenEntity) UnmarshalBinary(b []byte) error {
	var res AccessTokenEntity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
